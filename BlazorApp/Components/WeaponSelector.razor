@using Ps2TtkCalculator.Shared.Dto

@inject IDialogService DialogService
@inject HttpClient httpClient


<MudDialog>
    <DialogContent>
        @if (Weapons != null)
        {
            <MudTable T="WeaponPreview"
                      Items="@Weapons"
                      Dense="true"
                      Hover="true"
                      Striped="true"
                      Filter="new Func<WeaponPreview, bool>(FilterFunc)"
                      FixedHeader="true"
                      FixedFooter="true"
                      @bind-SelectedItem="selectedWeapon"
                      OnRowClick="@((args) => SelectWeapon(args.Item.ItemId))"
                      Height="400px">
                <ToolBarContent>
                    <MudTextField @bind-Value="searchString" Placeholder="Search" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0" DebounceInterval="200" />
                </ToolBarContent>
                <HeaderContent>
                    <MudTh>
                        <MudTableSortLabel SortBy="new Func<WeaponPreview, object>(x => x.Name)">Name</MudTableSortLabel>
                    </MudTh>
                    <MudTh>
                        <MudTableSortLabel SortBy="new Func<WeaponPreview, object>(x => x.Faction)">Faction</MudTableSortLabel>
                    </MudTh>
                    <MudTh>
                        <MudTableSortLabel SortBy="new Func<WeaponPreview, object>(x => x.WeaponCategory)">Weapon Category</MudTableSortLabel>
                    </MudTh>
                    <MudTh Style="width: 128px"></MudTh>
                </HeaderContent>
                <RowTemplate>
                    <MudTd DataLabel="Name">@context.Name</MudTd>
                    <MudTd DataLabel="Faction">@context.Faction</MudTd>
                    <MudTd DataLabel="Weapon Category">@context.WeaponCategory</MudTd>
                    <MudTd DataLabel="Image"><img srcset="@(censusUri + context.ImagePath)" style="height: 64px; width: 128px" /></MudTd>
                </RowTemplate>
                <PagerContent>
                    <MudTablePager RowsPerPageString="Weapons Per Page:" />
                </PagerContent>
            </MudTable>
        }
        </DialogContent>
        <DialogActions>
            <MudAppBarSpacer />
            <MudButton OnClick="Cancel">Cancel</MudButton>
        </DialogActions>
    </MudDialog>


@code {
    [CascadingParameter] MudDialogInstance MudDialog { get; set; }

    const string censusUri = "https://census.daybreakgames.com";

    public IReadOnlyList<WeaponPreview> Weapons { get; set; }
    WeaponPreview selectedWeapon;

    string searchString { get; set; } = "";

    private void Cancel()
    {
        MudDialog.Cancel();
    }

    private void SelectWeapon(int itemId)
    {
        Console.WriteLine("WeaponSelector SelectWeapon called");
        MudDialog.Close(DialogResult.Ok(itemId, typeof(int?)));
    }

    protected override async Task OnInitializedAsync()
    {
        var weaponListQueryUri = QueryUris.GetWeaponListRequestUri();
        var itemList = await httpClient.GetFromJsonAsync<ItemList>(weaponListQueryUri);

        Weapons = itemList.Items
                          .Where(item => !string.IsNullOrEmpty(item.Name?.En))
                          .Select(WeaponPreview.FromItem)
                          .ToList();

        await base.OnInitializedAsync();
    }

    private bool FilterFunc(WeaponPreview weapon)
    {
        return true == weapon?.Name?.Contains(searchString ?? "", StringComparison.InvariantCultureIgnoreCase);
    }
}
