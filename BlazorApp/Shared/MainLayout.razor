@inherits LayoutComponentBase
@inject IJSRuntime js

<MudThemeProvider Theme="_currentTheme" />
<MudDialogProvider />
<MudSnackbarProvider />

<div class="page">
    <div class="main">
        <div class="content px-4">
            <MudAppBar Elevation="25" Fixed="true" Color="Color.Primary">
                <MudText Typo="Typo.h4">Planetside 2 TTK Calculator</MudText>
                <MudToolBarSpacer/>
                <MudTooltip Text="Toggle light/dark theme">
                    <MudIconButton Icon="@Icons.Material.Filled.Brightness4" Color="Color.Inherit" OnClick="@((e) => ToggleDarkMode())" />
                </MudTooltip>
                <MudTooltip Text="GitHub repository">
                    <MudIconButton Icon="@Icons.Custom.Brands.GitHub" Style="color: white" Link="https://github.com/B4rrCH/Ps2TtkCalculator"/>
                </MudTooltip>
            </MudAppBar>

            <MudMainContent Class="mudblazor-main-content">
                @Body
                <MudScrollToTop TopOffset="400">
                    <MudFab Icon="@Icons.Material.Filled.KeyboardArrowUp" Color="Color.Primary" />
                </MudScrollToTop>
            </MudMainContent>
        </div>
    </div>
</div>


@code {
    protected override async Task OnInitializedAsync()
    {
        var darkModeSaved = await js.InvokeAsync<string>("BlazorExtensions.getFromLocalStorage", "darkMode");
        var darkModePreferred = await js.InvokeAsync<string>("BlazorExtensions.isDarkMode");
        if (darkModeSaved == "true" ||
            (string.IsNullOrEmpty(darkModeSaved) && darkModePreferred == "true"))
        {
            _currentTheme = _darkTheme;
        }
        else
        {
            _currentTheme = _lightTheme;
        }
    }

    private async Task ToggleDarkMode()
    {
        System.Console.WriteLine("Toggled Dark Mode");
        if (_currentTheme == _lightTheme)
        {
            _currentTheme = _darkTheme;
            await js.InvokeVoidAsync("BlazorExtensions.addToLocalStorage", "darkMode", "true");
        }
        else
        {
            _currentTheme = _lightTheme;
            await js.InvokeVoidAsync("BlazorExtensions.addToLocalStorage", "darkMode", "false");
        }
    }

    private MudTheme _currentTheme = new MudTheme();

    private readonly MudTheme _lightTheme =
    new MudTheme()
    {
        Palette = new Palette()
        {
            Black = "#272c34",
            Primary = "#0061b0"
        }
    };

    private readonly MudTheme _darkTheme =
    new MudTheme()
    {
        Palette = new Palette()
        {
            Black = "#27272f",
            Background = "#32333d",
            BackgroundGrey = "#27272f",
            Surface = "#373740",
            DrawerBackground = "#27272f",
            DrawerText = "rgba(255,255,255, 0.50)",
            DrawerIcon = "rgba(255,255,255, 0.50)",
            AppbarBackground = "#27272f",
            AppbarText = "rgba(255,255,255, 0.70)",
            TextPrimary = "rgba(255,255,255, 0.70)",
            TextSecondary = "rgba(255,255,255, 0.50)",
            ActionDefault = "#adadb1",
            ActionDisabled = "rgba(255,255,255, 0.26)",
            ActionDisabledBackground = "rgba(255,255,255, 0.12)",
            Divider = "rgba(255,255,255, 0.12)",
            DividerLight = "rgba(255,255,255, 0.06)",
            TableLines = "rgba(255,255,255, 0.12)",
            LinesDefault = "rgba(255,255,255, 0.12)",
            LinesInputs = "rgba(255,255,255, 0.3)",
            TextDisabled = "rgba(255,255,255, 0.2)",
            Primary = "#0061b0"
        }
    };
} 